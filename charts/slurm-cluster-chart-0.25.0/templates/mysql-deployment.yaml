apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: slurm
    app.kubernetes.io/component: mysql
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: slurm
      app.kubernetes.io/component: mysql 
      {{- if .Values.database.podLabels }}
      {{- toYaml .Values.database.podLabels | nindent 6 }}
      {{- end }}           
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: slurm
        app.kubernetes.io/component: mysql
        {{- if .Values.database.podLabels }}
        {{- toYaml .Values.database.podLabels | nindent 8 }}
        {{- end }}      
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: slurm_acct_db
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-auth-secret
                  key: password
            - name: MYSQL_RANDOM_ROOT_PASSWORD
              value: "yes"
            - name: MYSQL_USER
              value: "slurm"
          image: {{ .Values.database.image }}
          name: mysql
          ports:
            - containerPort: 3306
          resources:
{{ toYaml .Values.database.resources | indent 12 }}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: var-lib-mysql
      hostname: mysql
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}                  
      restartPolicy: Always
      volumes:
        - name: var-lib-mysql
          persistentVolumeClaim:
            claimName: var-lib-slurm-mysql
